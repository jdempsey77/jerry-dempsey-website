name: Production Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  production-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Production Pipeline
      run: npm run pipeline:production
      
    - name: Build and Deploy (on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "üöÄ Production build successful - ready for deployment"
        echo "‚úÖ All security and quality checks passed"
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          try {
            execSync('npm run pipeline:production', { stdio: 'pipe' });
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ **Production Pipeline Passed**\n\nAll tests completed successfully:\n- ‚úÖ Linting checks\n- ‚úÖ Security audit\n- ‚úÖ Build validation\n- ‚úÖ Functionality tests\n\nReady for merge to production!'
            });
          } catch (error) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Production Pipeline Failed**\n\nPlease fix the following issues before merging:\n```\n' + error.message + '\n```\n\nRun `npm run pipeline:production` locally to see full details.'
            });
            throw error;
          }
